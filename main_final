#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

int main()
{
    char p1[20], p2[20];
    int vita_p1=100;
    int vita_p2=100;
    int mana_p1=100;
    int mana_p2=100;
    int scelta; int atk;
    bool condizione_game=true;
    bool stupido=true;

    printf("**********************************WIZARDS BRAWL**********************************\n \n");


    printf("Giocatore 1, inserisci il tuo nome:\n");
    fgets(p1,20,stdin);  //c stops to store characters when it detect a space, solution fgets
    printf("Benvenuto %s\n",p1);

    printf("Giocatore 2, inserisci il tuo nome:\n");
    fgets(p2,20,stdin);  //c stops to store characters when it detect a space, solution fgets
    printf("Benvenuto %s\n",p2);

    srand(time(NULL));
    int r = rand() % 2; //picks random number between 0 and 1
    printf("il giocatore che inizia la partita Ã¨ pescato in modo casuale.\n \n");
    printf("**********************************GAME START**********************************\n\n");


    switch(r)
    {
            case 0:     //primo caso inzia giocatore 1
        while(condizione_game){

            if(vita_p1==0 || mana_p1==0){
                    printf(" %s died, winner is %s", p1, p2);
                    exit(0);
                } else {
                    printf(" %s turn, what are u using?\n atk:\n 1...\n 2...\n 3...\n", p1);

                    stupido=true;

                    while(stupido){
                    scanf("%d", &scelta);

                    switch(scelta)
                    {
                        case 1: //offensive magic
                            atk = 20;
                            mana_p1-= atk;
                            vita_p2-= 20;
                            printf("vita: %d\nmana: %d\n", vita_p1, mana_p1);
                            stupido=false;
                            break;

                        case 2: //defensive magic
                            atk = 30;
                            mana_p1-= atk;
                            vita_p1+= 20; //shield from one offensive magic
                            printf("vita: %d\nmana: %d\n", vita_p1, mana_p1);
                            stupido=false;
                            break;

                        case 3: //cure
                            atk = 40;
                            mana_p1-= atk;
                            vita_p1= 100; //restores health
                            printf("vita: %d\nmana: %d\n", vita_p1, mana_p1);
                            stupido=false;
                            break;

                        default:
                            printf("error\n"); //aggiungere un loop per riprovare ad inserire l'attacco
                    }
                }//loop
            }//else

            if(vita_p2==0 || mana_p2==0){
                    printf(" %s died, winner is %s", p2, p1);
                    exit(0);
                } else {
                    printf(" %s turn, what are u using?\n atk:\n 1...\n 2...\n 3...\n", p2);

                    stupido=true;

                    while(stupido){
                    scanf("%d", &scelta);

                    switch(scelta)
                    {
                        case 1: //offensive magic
                            atk = 20;
                            mana_p2-= atk;
                            vita_p1-= 20;
                            printf("vita: %d\nmana: %d\n", vita_p2, mana_p2);
                            stupido=false;
                            break;

                        case 2: //defensive magic
                            atk = 30;
                            mana_p2-= atk;
                            vita_p2+= 20; //shield from one offensive magic
                            printf("vita: %d\nmana: %d\n", vita_p2, mana_p2);
                            stupido=false;
                            break;
                        case 3: //cure
                            atk = 40;
                            mana_p2-= atk;
                            vita_p2= 100; //restores health
                            printf("vita: %d\nmana: %d\n", vita_p2, mana_p2);
                            stupido=false;
                            break;

                        default:
                            printf("error");
                    }
                } //switch
            } //else
        }//CASO 0

            case 1:   //secondo caso inizia giocatore 2
        while(condizione_game){

            if(vita_p2==0 || mana_p2==0){
                    printf(" %s died, winner is %s", p2, p1);
                    exit(0);
                } else {
                    printf(" %s turn, what are u using?\n atk:\n 1...\n 2...\n 3...\n", p2);

                    stupido=true;

                    while(stupido){
                    scanf("%d", &scelta);

                    switch(scelta)
                    {
                        case 1: //offensive magic
                            atk = 20;
                            mana_p2-= atk;
                            vita_p1-= 20;
                            printf("vita: %d\nmana: %d\n", vita_p2, mana_p2);
                            stupido=false;
                            break;

                        case 2: //defensive magic
                            atk = 30;
                            mana_p2-= atk;
                            vita_p2+= 20; //shield from one offensive magic
                            printf("vita: %d\nmana: %d\n", vita_p2, mana_p2);
                            stupido=false;
                            break;

                        case 3: //cure
                            atk = 40;
                            mana_p2-= atk;
                            vita_p2= 100; //restores health
                            printf("vita: %d\nmana: %d\n", vita_p2, mana_p2);
                            stupido=false;
                            break;

                        default:
                            printf("error"); //aggiungere un loop per riprovare ad inserire l'attacco
                    }
                }//loop
            }//else


            if(vita_p1==0 || mana_p1==0){
                    printf(" %s died, winner is %s", p1, p2);
                    exit(0);
                } else {
                    printf(" %s turn, what are u using?\n atk:\n 1...\n 2...\n 3...\n", p1);

                    stupido=true;

                    while(stupido){
                    scanf("%d", &scelta);

                    switch(scelta)
                    {
                        case 1: //offensive magic
                            atk = 20;
                            mana_p1-= atk;
                            vita_p2-= 20;
                            printf("vita: %d\nmana: %d\n", vita_p1, mana_p1);
                            stupido=false;
                            break;

                        case 2: //defensive magic
                            atk = 30;
                            mana_p1-= atk;
                            vita_p1+= 20; //shield from one offensive magic
                            printf("vita: %d\nmana: %d\n", vita_p1, mana_p1);
                            stupido=false;
                            break;
                        case 3: //cure
                            atk = 40;
                            mana_p1-= atk;
                            vita_p1= 100; //restores health
                            printf("vita: %d\nmana: %d\n", vita_p1, mana_p1);
                            stupido=false;
                            break;

                        default:
                            printf("error"); //aggiungere un loop per riprovare ad inserire l'attacco
                    }
                }//loop
            }//else
        }//CASO 1

        }


    return 0;
}
